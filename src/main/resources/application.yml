server:
  tomcat:
    uri-encoding: UTF-8
  address: 0.0.0.0
  port: 8080

spring:
  application:
    name: springboot-kafka
  datasource:
    name: alps  #数据库名
    url: jdbc:mysql://localhost:3306/alps #url
    username: root  #用户名
    password: snail123  #密码
    driver-class-name: com.mysql.jdbc.Driver  #数据库链接驱动

  ###########【Kafka集群】###########
  kafka:
    bootstrap-servers: 10.157.163.187:9092,10.157.163.187:9093,10.157.163.187:9094
    ###########【初始化消费者配置】###########
    consumer:
      # 是否自动提交offset
      enable-auto-commit: false
      auto:
        commit:
          interval:
            # 提交offset延时(接收到消息后多久提交offset)
            ms: 1000
      # 当kafka中没有初始offset或offset超出范围时将自动重置offset
      # earliest:重置为分区中最小的offset;
      # latest:重置为分区中最新的offset(消费分区中新产生的数据);
      # none:只要有一个分区不存在已提交的offset,就抛出异常;
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        # 默认的消费组ID
        group:
          id: defaultConsumerGroup
        # 消费请求超时时间
        request:
          timeout:
            ms: 180000
        # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
        session:
          timeout:
            ms: 120000
      # 批量消费每次最多消费多少条消息，获取的数据需要在在session.timeout.ms这个时间内处理完。结束后提交offset，否则rebalance
      max-poll-records: 10
    listener:
      # 消费端监听的topic不存在时，项目启动会报错(关掉)
      missing-topics-fatal: false
      # 设置批量消费
      type: batch
      # 并发数
      concurrency: 2
      # 设置消费工程的提交模式
      ack-mode: manual_immediate
    ###########【初始化生产者配置】###########
    producer:
      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
      # 批量大小
      # 当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka
      # linger.ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了
      batch-size: 16384
      # 生产端缓冲区大小
      buffer-memory: 33554432
      # Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 提交延时
      properties:
        linger:
          ms: 5000
      # 重试次数
      retries: 3
